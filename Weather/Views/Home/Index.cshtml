@using static Weather.Models.ApiWeather
@model WeatherResponse
@{
    ViewData["Title"] = "Consultar Clima";

}

<div class="d-flex flex-column justify-content-center align-content-center h-75">

    <div class="d-flex flex-column justify-content-center align-content-center">
        <h1 class="text-center text-white-50">Consultar Clima</h1>
        <form method="post" asp-controller="Home" asp-action="Index">

            <div class="form-floating mb-3 text-white-50">
                <input type="text" class="form-control bg-secondary" id="cityName" name="cityName" placeholder="São-Paulo" required />
                <label for="cityName">Nome da Cidade</label>
            </div>

            <div class="form-floating mb-3 text-white-50">
                <input type="text" class="form-control bg-secondary" id="countryCode" name="countryCode" placeholder="Ex: BR" />
                <label for="countryCode">Código do País</label>
            </div>

            <div class="d-flex justify-content-center p-3">
                <button type="submit" class="btn btn-secondary btn-lg">Consultar</button>
            </div>

        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <div style="color: red;" class="text-center">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
    </div>

    <div class="modal fade" id="staticBackdrop" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    @if (Model != null)
                    {
                        <h2>Clima para: @Model.Name</h2>
                        <p>Temperatura: @Model.Main.Temp °C</p>
                        <p>Umidade: @Model.Main.Humidity%</p>
                        <p>Condição: @Model.Weather[0].Description</p>
                        <p>Sensação Térmica: @Model.Main.FeelsLike °C</p>
                        <p>Máxima Térmica: @Model.Main.TempMax °C</p>
                        <p>Mínima Térmica: @Model.Main.TempMin °C</p>
                        <p>Velocidade do Vento: @Model.Wind.Velocidade km/hr</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const weatherData = @Html.Raw(Json.Serialize(Model));

            if (weatherData && weatherData.name) {
                const weatherModal = new bootstrap.Modal(document.querySelector('.modal'));
                weatherModal.show();
            }
        });
    </script>
}
